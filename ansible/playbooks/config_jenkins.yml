- name: Install Jenkins Plugins via CLI
  hosts: master_node
  become: yes
  vars_files:
    - ../vars/vars.yml

  vars:
    jenkins_master_ip: "{{ hostvars[inventory_hostname].ansible_host }}"
    jenkins_url: "http://{{ jenkins_master_ip }}:8080"
    jenkins_cli_jar: "/var/lib/jenkins/jenkins-cli.jar"

  pre_tasks:
    - name: Set Jenkins API token dynamically
      set_fact:
        jenkins_api_token: "{{ lookup('vars', 'jenkins_' + inventory_hostname + '_api_token') }}"

  tasks:
    - name: Check if Jenkins CLI jar Exists
      stat:
        path: "{{ jenkins_cli_jar }}"
      register: jenkins_cli_jar_check 

    - name: Download Jenkins CLI jar
      get_url:
        url: "{{ jenkins_url }}/jnlpJars/jenkins-cli.jar"
        dest: "{{ jenkins_cli_jar }}"
        mode: '0755'
      when: not jenkins_cli_jar_check.stat.exists

    - name: Install Jenkins plugins via CLI
      shell: |
        java -jar {{ jenkins_cli_jar }} -s {{ jenkins_url }} -auth {{ jenkins_user }}:{{ jenkins_api_token }} install-plugin {{ item }}
      args:
        executable: /bin/bash
      loop: "{{ jenkins_plugins }}"
      register: install_result

    - name: Output plugin installation result
      debug:
        var: install_result.results

  handlers:
  - name: Restart Jenkins
    shell: java -jar {{ jenkins_cli_jar }} -s {{ jenkins_url }} \
           -auth {{ jenkins_user }}:{{ jenkins_api_token }} safe-restart
    args:
      executable: /bin/bash
